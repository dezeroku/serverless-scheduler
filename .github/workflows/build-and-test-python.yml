---
name: Build and test a single Python component
on:
  workflow_dispatch:
    inputs:
      directory:
        required: true
        type: string
      python-version:
        required: true
        type: string
      plugin-name:
        # If it's set to a non-empty string
        # it's assumed that a plugin is being tested via this flow
        required: false
        default: ""
        type: string

  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      python-version:
        required: true
        type: string
      plugin-name:
        # If it's set to a non-empty string
        # it's assumed that a plugin is being tested via this flow
        required: false
        default: ""
        type: string
jobs:
  poetry-install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          repository: dezeroku/monitor-page
          ref: aws-poc
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          path: ${{ inputs.directory }}

      - uses: actions/checkout@v3
        if: ${{ !inputs.plugin-name }}

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: "poetry"
          cache-dependency-path: |
            ${{ inputs.directory }}/pyproject.toml
            ${{ inputs.directory }}/poetry.lock

      - name: Install dependencies
        run: |
          cd ${{ inputs.directory }}
          poetry install --no-root

  pytest:
    runs-on: ubuntu-latest
    needs: poetry-install

    steps:
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          repository: dezeroku/monitor-page
          ref: aws-poc
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          path: ${{ inputs.directory }}

      - uses: actions/checkout@v3
        if: ${{ !inputs.plugin-name }}

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: "poetry"
          cache-dependency-path: |
            ${{ inputs.directory }}/pyproject.toml
            ${{ inputs.directory }}/poetry.lock
      - name: Run pytest
        run: |
          cd ${{ inputs.directory }}
          poetry run coverage run -m pytest tests
          poetry run coverage report --show-missing

  pylint:
    runs-on: ubuntu-latest
    needs: poetry-install

    steps:
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          repository: dezeroku/monitor-page
          ref: aws-poc
      - uses: actions/checkout@v3
        if: ${{ inputs.plugin-name }}
        with:
          path: ${{ inputs.directory }}

      - uses: actions/checkout@v3
        if: ${{ !inputs.plugin-name }}

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: "poetry"
          cache-dependency-path: |
            ${{ inputs.directory }}/pyproject.toml
            ${{ inputs.directory }}/poetry.lock
      - name: Run pylint
        run: |
          cd ${{ inputs.directory }}
          poetry run pylint ./${{ inputs.directory }} ./tests
