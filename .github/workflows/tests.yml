---
name: Run tests

on:
  push:

  workflow_dispatch:

  pull_request:
jobs:
  poetry-install:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cfg:
          - component: 'items'
            python-version: '3.8'
          - component: 'common'
            python-version: '3.8'
          - component: 'schedulers'
            python-version: '3.8'
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}
          cache: 'poetry'
          cache-dependency-path: |
            ${{ matrix.cfg.component }}/pyproject.toml
            ${{ matrix.cfg.component }}/poetry.lock

      - name: Install dependencies
        run: |
          cd ${{ matrix.cfg.component }}
          poetry install --no-root


  pytest:
    runs-on: ubuntu-latest
    needs: poetry-install

    strategy:
      matrix:
        cfg:
          - component: 'items'
            python-version: '3.8'
          - component: 'common'
            python-version: '3.8'
          - component: 'schedulers'
            python-version: '3.8'
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}
          cache: 'poetry'
          cache-dependency-path: |
            ${{ matrix.cfg.component }}/pyproject.toml
            ${{ matrix.cfg.component }}/poetry.lock
      - name: Run pytest
        run: |
          cd ${{ matrix.cfg.component }}
          poetry run coverage run -m pytest
          poetry run coverage report


  pylint:
    runs-on: ubuntu-latest
    needs: poetry-install

    strategy:
      matrix:
        cfg:
          - component: 'items'
            python-version: '3.8'
          - component: 'common'
            python-version: '3.8'
          - component: 'schedulers'
            python-version: '3.8'
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}
          cache: 'poetry'
          cache-dependency-path: |
            ${{ matrix.cfg.component }}/pyproject.toml
            ${{ matrix.cfg.component }}/poetry.lock
      - name: Run pylint
        run: |
          cd ${{ matrix.cfg.component }}
          poetry run pylint ./${{ matrix.cfg.component }}


  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0


  swagger-json-schemas:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Check if swagger .py json schemas are up-to-date with swagger.yaml
        run: |
          pipx install pre-commit
          pipx install openapi2jsonschema
          utils/test_json_schemas_updated.sh
