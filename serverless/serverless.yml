service: ${self:custom.tfOutputs.service.value}
frameworkVersion: "3"

provider:
  stage: ${self:custom.tfOutputs.stage.value}
  versionFunctions: false
  name: aws
  region: ${self:custom.tfOutputs.aws_region.value}
  runtime: python3.8
  memorySize: 128
  httpApi:
    id: ${self:custom.tfOutputs.core.value.api_gateway_id}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            Fn::Join:
              - ""
              - - arn:aws:dynamodb:${self:provider.region}:*:table/
                - ${self:custom.tfOutputs.core.value.items_dynamodb_name}

functions:
  - ${file(../items/functions.yml)}

package:
  individually: true

custom:
  tfOutputs: ${file(../.deployment-temp/${env:DEPLOY_ENV}/terraform/outputs.json)}
