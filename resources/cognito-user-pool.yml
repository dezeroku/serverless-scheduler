Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${sls:stage}-user-pool
      # Set email as an alias
      UsernameAttributes:
        - email
      # Don't require verification for email
      AutoVerifiedAttributes:
        - email
      # Disable the user sign-up option
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
#      Policies:
#        PasswordPolicy:
#          RequireSymbols: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # This can be extended with google and such
      SupportedIdentityProviders:
        - COGNITO
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      # Generate an app client name based on the stage
      ClientName: ${sls:stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      GenerateSecret: false
      CallbackURLs:
        - https://${self:custom.tfOutputs.front_domain.value}/login/cognito-parser
      LogoutURLs:
        - https://${self:custom.tfOutputs.front_domain.value}/logout
      DefaultRedirectURI: https://${self:custom.tfOutputs.front_domain.value}/login/cognito-parser

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    DependsOn:
      - WebsiteDNSName
    Properties:
      CustomDomainConfig:
        CertificateArn: ${self:custom.tfOutputs.auth_domain_cert_arn.value}
      Domain: ${self:custom.tfOutputs.auth_domain.value}
      UserPoolId:
        Ref: CognitoUserPool

  AuthDomainRecordSet:
    Type: AWS::Route53::RecordSet
    DependsOn: CognitoUserPoolDomain
    Properties:
      Name: ${self:custom.tfOutputs.auth_domain.value}
      HostedZoneName: ${self:custom.tfOutputs.base_domain.value}.
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # This is just a hardcode for CloudFront
        DNSName: !GetAtt [WebAppCloudFrontDistribution, DomainName]
        EvaluateTargetHealth: false

# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
